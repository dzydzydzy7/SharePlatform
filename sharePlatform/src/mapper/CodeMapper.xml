<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.CodeMapper">
  <resultMap id="BaseResultMap" type="po.Code">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="field" jdbcType="VARCHAR" property="field" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="downTimes" jdbcType="INTEGER" property="downtimes" />
    <result column="uploadTime" jdbcType="TIMESTAMP" property="uploadtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="po.Code">
    <result column="intro" jdbcType="LONGVARCHAR" property="intro" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, name, author, field, url, downTimes, uploadTime
  </sql>
  <sql id="Blob_Column_List">
    intro
  </sql>
  <select id="selectAllCode" resultMap="ResultMapWithBLOBs">
  	select * from code
  </select>
  <select id="selectByField" parameterType="String" resultMap="ResultMapWithBLOBs">
  	select * from code where field = #{field}
  </select>
  <select id="selectByUserid" parameterType="int" resultType="java.lang.Integer">
  	select downTimes from code where userid = #{userid}
  </select>
  <select id="selectCodeByUserid" parameterType="int" resultMap="ResultMapWithBLOBs">
  	select * from code where userid = #{userid}
  </select>
  <select id="selectByName" parameterType="String" resultMap="ResultMapWithBLOBs">
  	select * from code where name = #{name}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from code
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from code
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="po.Code">
    insert into code (id, userid, name, 
      author, field, url, 
      downTimes, uploadTime, intro
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{field,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{downtimes,jdbcType=INTEGER}, #{uploadtime,jdbcType=TIMESTAMP}, #{intro,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Code">
    insert into code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="field != null">
        field,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="downtimes != null">
        downTimes,
      </if>
      <if test="uploadtime != null">
        uploadTime,
      </if>
      <if test="intro != null">
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="field != null">
        #{field,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="downtimes != null">
        #{downtimes,jdbcType=INTEGER},
      </if>
      <if test="uploadtime != null">
        #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="po.Code">
    update code
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="field != null">
        field = #{field,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="downtimes != null">
        downTimes = #{downtimes,jdbcType=INTEGER},
      </if>
      <if test="uploadtime != null">
        uploadTime = #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="po.Code">
    update code
    set userid = #{userid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      field = #{field,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      downTimes = #{downtimes,jdbcType=INTEGER},
      uploadTime = #{uploadtime,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Code">
    update code
    set userid = #{userid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      field = #{field,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      downTimes = #{downtimes,jdbcType=INTEGER},
      uploadTime = #{uploadtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>